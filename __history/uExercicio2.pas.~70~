unit uExercicio2;

interface 


uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, StrUtils,
  uExercicio1;

type
TExportacao = class abstract
public
 // Function exportar: String ;

end;
TExportaTexto = class(TExportacao)
  public
  texto : string;
end;
TExportarInvertido = class(TExportaTexto)
  public

end;
  TExercicio2 = class(TForm)
    pnlExercicio2: TPanel;
    lstTexto_original: TListBox;
    lstTexto_Convertido: TListBox;
    lblTexto_original: TLabel;
    lblOpcao_conversao: TLabel;
    lblTexto_convertido: TLabel;
    rbdInvertido: TRadioButton;
    rdbPrimeira_maiuscula: TRadioButton;
    rdbOrdem_alfabetica: TRadioButton;
    edtConverter: TEdit;
    btnConverter: TButton;
    btnSair: TButton;
    procedure btnConverterClick(Sender: TObject);
    procedure btnSairClick(Sender: TObject);

    
  private
    { Private declarations }
       Textos : TArrayString;
  public
    { Public declarations }
  end;

var
  Exercicio2: TExercicio2;

implementation

uses
  System.Generics.Defaults, System.Generics.Collections;
  
{$R *.dfm}

 //TESTE
 function PrimeiraLetraMaiscula(Str: string): string;
var
  i: integer;
  esp: boolean;
begin
  str := LowerCase(Trim(str));
  for i := 1 to Length(str) do
  begin
    if i = 1 then
      str[i] := UpCase(str[i])
    else
      begin
        if i <> Length(str) then
        begin
          esp := (str[i] = ' ');
          if esp then
            str[i+1] := UpCase(str[i+1]);
        end;
      end;
  end;
  Result := Str;
end;

procedure TExercicio2.btnConverterClick(Sender: TObject);
  var letraMaiuscula : String;
  var ordenado: TStringList;
  var i : integer;
begin
  if edtConverter.Text<>'' then
  begin
    SetLength(Textos, i + 1);
    Textos[i] := (edtConverter.text);
    i:= i + 1;
    edtConverter.Clear;
  end;
        //Adicionar no texto convertido
  if rbdInvertido.Checked = true then
  begin
    lstTexto_Convertido.Items.Add(ReverseString(edtConverter.Text));
  end;
      //Adicionar primeira Maiuscula
  if rdbPrimeira_maiuscula.Checked = true then
  begin
      letraMaiuscula := PrimeiraLetraMaiscula(edtConverter.Text);
  end;
    //Adicionar Ordem Alfabetica
  if rdbOrdem_alfabetica.Checked = true then
  ordenado := TStringList.Create;
  begin
    // Colocar ordenação
  end;

end;

procedure TExercicio2.btnSairClick(Sender: TObject);
begin
 Close;
end;



end.
